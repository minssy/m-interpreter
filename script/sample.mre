// sample test
int cnt = 1
int x = 2
double y = 1.3

y = x + (y + 2.5) * 2
// 변수 y의 값은 9.6이 됨.
log ("y=", y, " == 9.6")

x += 3
// 변수 x의 값은 5가 됨
log ("x=", x, " == 5")

log ("***** ", cnt++, " *****")
y = 7.5
double n
func double sumAdd (double xx) {
    int ik = xx
    double dk = math.ceil(xx)
    log(" -sumAdd: double:", xx, " (int:", ik, ", math.ceil:", dk, ")")
    y += xx
    return y
}
n = sumAdd (3.1)
// 변수 n의 값은 10.6가 됨.
log ("n=", n, " == 10.6")

log ("***** ", cnt++, " *****")
int ix = 3
int iy = 2
while (ix < 10) {
    log (" * ix=", ix, " iy=", iy)
    iy += ix
    ix = ix + 1
}
// 변수 ix의 값은 10가 됨.
log ("ix=", ix, " == 10")
log ("iy=", iy, " == 44")

log ("***** ", cnt++, " *****")
ix = 3
while (true)
{
    log (" * ix=", ix)
    ix *= 3
    break ? ix > 50
}
log ("ix=", ix, " == 81")

log ("***** ", cnt++, " *****")
n=0
double sum=3
for (n = 1; n < 4; ++n ) {
    sum = sum + n
}
log ("n=", n, " == 4")
log ("sum=", sum, " == 9")

log ("***** ", cnt++, " *****")
n=0
sum=3
for (n = 6; n >= 2 ; n -= 2 ) {
//for (n = 6; n >= 2 ; n-- ) {
    log (" * n=", n)
    sum = sum + n
}
log ("n=", n, " == 0")
log ("sum=", sum, " == 15")

log ("***** ", cnt++, " *****")
n=0
sum=3
int nlist[5]
nlist[0] = 7
nlist[2] = 5
nlist[3] = 3
for (n = 0; n<nlist.size(); ) {
    sum += nlist[n++]
}
log ("n=", n, " == 5")
log ("sum=", sum, " == 18")

log ("***** ", cnt++, " *****")
x=0
sum=0
int nlist2[3]
nlist2[0] = 7
nlist2[2] = 3
foreach (x : nlist2) {
    sum += x
}
log ("x=", x, " == 3")
log ("sum=", sum, " == 10")

log ("***** ", cnt++, " *****")
sum=0
for (n = 1; n < 5; ++n ) {
    sum = sum + n
    log (" * n=", n)
    break ? n == 3
}
log ("n=", n, " == 3")
log ("sum=", sum, " == 6")

log ("***** ", cnt++, " *****")
sum=0
for (n = 1; n < 5; n++ ) {
    continue ? n == 3
    log (" * n=", n)
    sum = sum + n
}
log ("n=", n, " == 5")
log ("sum=", sum, " == 7")
